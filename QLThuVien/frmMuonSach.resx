<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAH
        6QAAB+kBlHo8QAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADCSURBVEhL7ZbR
        CcIwGITjLOkuFjQdweHSEbpFJ+gqPsX/0oDmPBDUiA95+CAcf+6g/Y/WpZRe4pI7+Pl88TGsGTtDU7OM
        FBk/T6MZp0eGeDqqWUaKzBDD8hwQFjXLSJExw40DoKlZRooMzMi8B9TAjMz/KGAv0TSWVYSR4mpwADQ1
        u2Uv84S3lSg3lC9/BzTeDqi/Hvic9QcBrR9R85esVospFzmgN/kOzMi8B9SUFa4CoKlZRopM84/+XsZ3
        fluSuwEk17KUAEyFLwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6vF/VbgWKCDwiPEAAAAASUVORK5CYII=
</value>
  </data>
</root>